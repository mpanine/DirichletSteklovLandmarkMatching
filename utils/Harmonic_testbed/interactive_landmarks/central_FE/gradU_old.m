function [gt,gr] = gradU_old(index,l1, a, b, R)
%PRODUCES THE GRADIENT OF U (one of the three standard finite element functions)
%Vertices at (0,0), (l1,0), (a,b)
%R: internal radius of the central element (sometimes called epsilon)
%index = 0,1,2 the index of the desired function (0: (0,0), 1: (l1,0), 2: (a,b) )

if index == 0

    gr = @(t,r) (-1).*((-1).*R+l1.*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^(-1);

    gt = @(t,r) l1.*((-1).*r+R).*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1).*sin(t) ...
                  ).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2).*((-1).*R+ ...
                  l1.*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^(-2);

elseif index == 1
    
    gr = @(t,r) (b.^2+((-1).*a+l1).^2).^(-1/2).*((-1).*R+l1.*(cos(t)+(-1).*a.^(-1) ...
                  .*(b+(-1).*l1).*sin(t)).^(-1)).^(-1).*(((-1).*a+l1.*cos(t).*(cos( ...
                  t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^2+((-1).*b+l1.* ...
                  sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^2).^( ...
                  1/2);
    
    gt = @(t,r) (1/2).*(b.^2+((-1).*a+l1).^2).^(-1/2).*(r+(-1).*R).*((-1).*R+l1.*( ...
                  cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^(-1).*(2.*(( ...
                  -1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^( ...
                  -1)).*((-1).*l1.*cos(t).*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1) ...
                  .*sin(t)).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2)+(-1) ...
                  .*l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1))+ ...
                  2.*((-1).*l1.*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1).*sin(t)).* ...
                  sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2)+l1.* ...
                  cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).*((-1) ...
                  .*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1) ...
                  )).*(((-1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).* ...
                  sin(t)).^(-1)).^2+((-1).*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+( ...
                  -1).*l1).*sin(t)).^(-1)).^2).^(-1/2)+l1.*(b.^2+((-1).*a+l1).^2).^( ...
                  -1/2).*(r+(-1).*R).*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1).* ...
                  sin(t)).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2).*((-1) ...
                  .*R+l1.*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^(-2) ...
                  .*(((-1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin( ...
                  t)).^(-1)).^2+((-1).*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1) ...
                  .*l1).*sin(t)).^(-1)).^2).^(1/2);
    
    
elseif index == 2
    
    gr = @(t,r) ((-1).*R+l1.*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)) ...
                 .^(-1).*(1+(-1).*(b.^2+((-1).*a+l1).^2).^(-1/2).*(((-1).*a+l1.* ...
                cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^2+(( ...
                -1).*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^( ...
                -1)).^2).^(1/2));
    
    gt = @(t,r) (-1/2).*(b.^2+((-1).*a+l1).^2).^(-1/2).*(r+(-1).*R).*((-1).*R+l1.* ...
                  (cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).^(-1).*(2.*(( ...
                  -1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^( ...
                  -1)).*((-1).*l1.*cos(t).*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1) ...
                  .*sin(t)).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2)+(-1) ...
                  .*l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1))+ ...
                  2.*((-1).*l1.*((-1).*a.^(-1).*(b+(-1).*l1).*cos(t)+(-1).*sin(t)).* ...
                  sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-2)+l1.* ...
                  cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1)).*((-1) ...
                  .*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).*sin(t)).^(-1) ...
                  )).*(((-1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).*l1).* ...
                  sin(t)).^(-1)).^2+((-1).*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1).*(b+( ...
                  -1).*l1).*sin(t)).^(-1)).^2).^(-1/2)+l1.*(r+(-1).*R).*((-1).*a.^( ...
                  -1).*(b+(-1).*l1).*cos(t)+(-1).*sin(t)).*(cos(t)+(-1).*a.^(-1).*( ...
                  b+(-1).*l1).*sin(t)).^(-2).*((-1).*R+l1.*(cos(t)+(-1).*a.^(-1).*( ...
                  b+(-1).*l1).*sin(t)).^(-1)).^(-2).*(1+(-1).*(b.^2+((-1).*a+l1).^2) ...
                  .^(-1/2).*(((-1).*a+l1.*cos(t).*(cos(t)+(-1).*a.^(-1).*(b+(-1).* ...
                  l1).*sin(t)).^(-1)).^2+((-1).*b+l1.*sin(t).*(cos(t)+(-1).*a.^(-1) ...
                  .*(b+(-1).*l1).*sin(t)).^(-1)).^2).^(1/2));
    
    
else
    
    error('The index of the desired function must be equal to 0, 1 or 2!\n')

end

end

